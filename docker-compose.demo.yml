services:
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      # LLM Configuration
      - LLM__PROVIDER=${LLM__PROVIDER:-gemini}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - LLM__GEMINI_MODEL=${LLM__GEMINI_MODEL:-gemini-2.0-flash}
      # Optional LLM providers
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - LLM__OLLAMA_HOST=${LLM__OLLAMA_HOST:-}
      
      # Prometheus Configuration
      - PROMETHEUS__URL=${PROMETHEUS__URL:-http://prometheus:9090}
      - PROMETHEUS__TIMEOUT=${PROMETHEUS__TIMEOUT:-30}
      - PROMETHEUS__MAX_RETRIES=${PROMETHEUS__MAX_RETRIES:-3}
      - PROMETHEUS__RETRY_BACKOFF=${PROMETHEUS__RETRY_BACKOFF:-1.5}
      
      # Cache Configuration
      - CACHE__TYPE=${CACHE__TYPE:-memory}
      - CACHE__TTL=${CACHE__TTL:-3600}
      
      # Optional Slack Integration
      - SLACK__ENABLED=${SLACK__ENABLED:-false}
      - SLACK__BOT_TOKEN=${SLACK__BOT_TOKEN:-}
      - SLACK__APP_TOKEN=${SLACK__APP_TOKEN:-}
      - SLACK__DEFAULT_CHANNEL=${SLACK__DEFAULT_CHANNEL:-monitoring}
      
      # Redis Configuration (if using redis cache)
      - REDIS__URL=${REDIS__URL:-redis://redis:6379/0}
      - REDIS__MAX_CONNECTIONS=${REDIS__MAX_CONNECTIONS:-10}
      - REDIS__TIMEOUT=${REDIS__TIMEOUT:-5}
    depends_on:
      - redis
      - prometheus
      - loki
    volumes:
      - ./app:/app/app
    networks:
      - sherlog-network
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        loki-external-labels: "container_name=sherlog-app"

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - sherlog-network
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        loki-external-labels: "container_name=redis"

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./app/demo/prometheus:/etc/prometheus
    networks:
      - sherlog-network
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        loki-external-labels: "container_name=prometheus"

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    networks:
      - sherlog-network

  promtail:
    image: grafana/promtail:2.9.0
    volumes:
      - ./demo/promtail:/etc/promtail
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - sherlog-network
    depends_on:
      - loki

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      - ./app/demo/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
      - loki
    networks:
      - sherlog-network
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        loki-external-labels: "container_name=grafana"

  node-exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    networks:
      - sherlog-network
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        loki-external-labels: "container_name=node-exporter"

  sample-app:
    build: 
      context: ./demo/sample-app
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - sherlog-network
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        loki-external-labels: "container_name=sample-app"

networks:
  sherlog-network:
    driver: bridge

volumes:
  prometheus_data: {} 