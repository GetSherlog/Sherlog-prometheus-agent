[pytest]
# Test discovery and execution
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = 
    --verbose
    --cov=app
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
    --no-cov-on-fail
    --asyncio-mode=auto
    --durations=10
    --maxfail=10
    --showlocals
    --tb=short

# Environment variables for testing
env =
    ENVIRONMENT=test
    DEBUG=true
    PROMETHEUS_URL=http://localhost:9090
    REDIS_URL=redis://localhost:6379/1

# Markers
markers =
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    slow: marks tests as slow (skipped by default)
    prometheus: marks tests that require Prometheus
    slack: marks tests that require Slack
    llm: marks tests that require LLM
    redis: marks tests that require Redis

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test timeouts
timeout = 300

# Disable warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::UserWarning
    ignore::RuntimeWarning

# Coverage settings
[coverage:run]
branch = True
source = app
omit =
    app/demo/*
    app/static/*
    app/tests/*
    app/*/__init__.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError
    except ImportError:
    raise AssertionError
    if TYPE_CHECKING:
    @abstractmethod
    @overload 