# Sherlog Prometheus Agent Environment Configuration
# Copy this file to .env and adjust values as needed

# Application Environment
ENVIRONMENT=development  # Options: development, staging, production
DEBUG=false

# LLM Configuration
# Required: Choose one provider and configure its settings
LLM__PROVIDER=gemini  # Options: gemini, openai, ollama

# Provider-specific settings (only configure the section for your chosen provider)

# 1. Gemini Configuration (if LLM__PROVIDER=gemini)
GEMINI_API_KEY=your-gemini-api-key  # Required for Gemini
LLM__GEMINI_MODEL=gemini-2.0-flash  # Options: gemini-2.0-flash, gemini-2.0-pro

# 2. OpenAI Configuration (if LLM__PROVIDER=openai)
# OPENAI_API_KEY=your-openai-key  # Required for OpenAI
# LLM__OPENAI_MODEL=gpt-4  # Default model when using OpenAI

# 3. Ollama Configuration (if LLM__PROVIDER=ollama)
# LLM__OLLAMA_HOST=http://localhost:11434  # Required for Ollama
# LLM__OLLAMA_MODEL=llama2  # Default model when using Ollama

# Prometheus Configuration
PROMETHEUS__URL=http://localhost:9090
PROMETHEUS__TIMEOUT=30  # Seconds
PROMETHEUS__MAX_RETRIES=3
PROMETHEUS__RETRY_BACKOFF=1.5  # Exponential backoff multiplier

# Cache Configuration
CACHE__TYPE=memory  # Options: memory, redis
CACHE__TTL=3600  # Cache TTL in seconds

# Redis Configuration (only needed if CACHE__TYPE=redis)
REDIS__URL=redis://localhost:6379/0
REDIS__MAX_CONNECTIONS=10
REDIS__TIMEOUT=5  # Seconds

# Logging Configuration
LOGGING__LEVEL=INFO  # Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOGGING__FORMAT=json  # Options: json, text
LOGGING__FILE_PATH=logs/agent.log  # Set to empty to disable file logging
LOGGING__ROTATION_SIZE=10MB
LOGGING__BACKUP_COUNT=5
LOGGING__CORRELATION_ENABLED=true

# Frontend Configuration
NEXT_PUBLIC_API_URL=http://localhost:8000

# Security Configuration
CORS_ORIGINS=["http://localhost:3000"]  # JSON array of allowed origins
API_KEY_HEADER=X-API-Key
ENABLE_AUTH=false  # Enable authentication in production

# Development Tools
ENABLE_DOCS=true  # Enable Swagger UI documentation
ENABLE_METRICS=true  # Enable Prometheus metrics endpoint

# Optional Integrations
NOTIFICATIONS=[]  # Options: ["slack", "email", "webhook"]

# Slack Configuration (only needed if "slack" is in NOTIFICATIONS)
SLACK__ENABLED=false
SLACK__BOT_TOKEN=xoxb-your-bot-token  # Only required if SLACK__ENABLED=true
SLACK__APP_TOKEN=xapp-your-app-token  # Only required if SLACK__ENABLED=true
SLACK__DEFAULT_CHANNEL=monitoring

# Note: In production, make sure to:
# 1. Set ENVIRONMENT=production
# 2. Set DEBUG=false
# 3. Enable authentication (ENABLE_AUTH=true)
# 4. Configure secure CORS_ORIGINS
# 5. Use secure Redis configuration
# 6. Set appropriate logging levels 